services:
  backend:
    build: ../backend
    env_file:
      - .env
    ports:
      - "8081:8081"
    depends_on:
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      REDIS_ADDR: redis:6379
      S3_ENDPOINT: minio:9000
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: ${S3_BUCKET}
      API_KEYS: ${API_KEYS}
      # Add other needed env vars
    networks:
      - app-network

  frontend:
    build: ../frontend
    ports:
      - "8080:80"
    environment:
      - BACKEND_API_KEY=${BACKEND_API_KEY}
    depends_on:
      - backend
    # no ports exposed, as nginx is the entrypoint
    networks:
      - app-network

  redis:
    image: redis:7
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    ports:
      - "6379:6379"
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 3s
      retries: 3
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    networks:
      - app-network

volumes:
  minio-data:

networks:
  app-network:
    driver: bridge